<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add_new_row" xml:space="preserve">
    <value>Add a new row to list.</value>
  </data>
  <data name="AutoMeasureStart" xml:space="preserve">
    <value>Automatic start of measurement.</value>
  </data>
  <data name="AutoMode_measurments_finished" xml:space="preserve">
    <value>Measurements in automatic mode are completed. The end of the list has been reached.</value>
  </data>
  <data name="CantManualyMeasure" xml:space="preserve">
    <value>It is impossible to make measurements started manually.</value>
  </data>
  <data name="Clear_list" xml:space="preserve">
    <value>Clear the entire list.</value>
  </data>
  <data name="Delete_selected_row" xml:space="preserve">
    <value>Delete the selected row from list.</value>
  </data>
  <data name="Error_during_get_FP" xml:space="preserve">
    <value>An error occurred while requesting periodic feedback position.</value>
  </data>
  <data name="Error_proc_data" xml:space="preserve">
    <value>An error occurred while processing the acquired data.</value>
  </data>
  <data name="Failed_to_set_new_oscillation_parameters" xml:space="preserve">
    <value>Failed to set new values of oscillation parameters.</value>
  </data>
  <data name="Failed_to_start_recording" xml:space="preserve">
    <value>Failed to start recording.</value>
  </data>
  <data name="Frequency_not_found" xml:space="preserve">
    <value>The specified frequency with specified error was not found.</value>
  </data>
  <data name="Load_list" xml:space="preserve">
    <value>Load list from file.</value>
  </data>
  <data name="MaxRecDuration" xml:space="preserve">
    <value>Maximum recording time (in minutes).</value>
  </data>
  <data name="New_oscillation_value_set" xml:space="preserve">
    <value>Frequency {0} Hz and Displacement {1} m are set.</value>
  </data>
  <data name="No_borders_were_set" xml:space="preserve">
    <value>No boundaries were set. Contact the developer.</value>
  </data>
  <data name="NumberOfPeriods" xml:space="preserve">
    <value>Number of periods to record.</value>
  </data>
  <data name="SaveError" xml:space="preserve">
    <value>An error occurred while saving data to file.</value>
  </data>
  <data name="Save_list" xml:space="preserve">
    <value>Save list to file.</value>
  </data>
  <data name="SettingsSaved" xml:space="preserve">
    <value>Settings saved!</value>
  </data>
  <data name="SummaryMeasuredValueEx" xml:space="preserve">
    <value>The measured part of summary of results is alredy set.</value>
  </data>
  <data name="SummarySetValueEx" xml:space="preserve">
    <value>The set part of summary of results is already set.</value>
  </data>
  <data name="The_value_cannot_be_null" xml:space="preserve">
    <value>The value cannot be null.</value>
  </data>
  <data name="UnableToSaveSettings" xml:space="preserve">
    <value>Unable to save settings. Error: {0}.</value>
  </data>
  <data name="Unable_to_get_is_ready_for_measure" xml:space="preserve">
    <value>Unable to get is ready for measurements info.</value>
  </data>
  <data name="Unable_to_get_status" xml:space="preserve">
    <value>Unable to get status.</value>
  </data>
  <data name="Unable_to_pause_oscilation" xml:space="preserve">
    <value>Unable to pause oscillation.</value>
  </data>
  <data name="Unable_to_resume_oscilation" xml:space="preserve">
    <value>Unable to resume oscillation.</value>
  </data>
  <data name="Unable_to_set_center" xml:space="preserve">
    <value>Unable to set center of oscillation.</value>
  </data>
  <data name="Unable_to_set_oscill_params" xml:space="preserve">
    <value>Unable to set parameters of oscillation.</value>
  </data>
  <data name="Unable_to_set_updateTrigger" xml:space="preserve">
    <value>Unable to set update trigger.</value>
  </data>
  <data name="Unable_to_start_up" xml:space="preserve">
    <value>Unable to start user program.</value>
  </data>
  <data name="Unable_to_stop_up" xml:space="preserve">
    <value>Unable to stop user program.</value>
  </data>
  <data name="Value_out_of_borders" xml:space="preserve">
    <value>Entered value {0} is out of borders {1} - {2}. Value has been changed to be within the borders.</value>
  </data>
  <data name="WaitTime_s" xml:space="preserve">
    <value>Time (in seconds) before the next line in the list automatically starts.</value>
  </data>
  <data name="CanTStartNewSession" xml:space="preserve">
    <value>Can't start new session.</value>
  </data>
  <data name="Velocity_format" xml:space="preserve">
    <value>{0}/s</value>
  </data>
  <data name="accleleration_format" xml:space="preserve">
    <value>{0}/s²</value>
  </data>
  <data name="StartPlay" xml:space="preserve">
    <value>Start play</value>
  </data>
  <data name="StartRegistr" xml:space="preserve">
    <value>Start registration</value>
  </data>
  <data name="progIsRemoteMaster" xml:space="preserve">
    <value>Is remote master mode</value>
  </data>
  <data name="progIsRemoteSlave" xml:space="preserve">
    <value>Is remote slave mode</value>
  </data>
</root>