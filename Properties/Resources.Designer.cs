//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ush4.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ush4.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0}/s².
        /// </summary>
        internal static string accleleration_format {
            get {
                return ResourceManager.GetString("accleleration_format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add a new row to list..
        /// </summary>
        internal static string Add_new_row {
            get {
                return ResourceManager.GetString("Add_new_row", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Automatic start of measurement..
        /// </summary>
        internal static string AutoMeasureStart {
            get {
                return ResourceManager.GetString("AutoMeasureStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Measurements in automatic mode are completed. The end of the list has been reached..
        /// </summary>
        internal static string AutoMode_measurments_finished {
            get {
                return ResourceManager.GetString("AutoMode_measurments_finished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на It is impossible to make measurements started manually..
        /// </summary>
        internal static string CantManualyMeasure {
            get {
                return ResourceManager.GetString("CantManualyMeasure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can&apos;t start new session..
        /// </summary>
        internal static string CanTStartNewSession {
            get {
                return ResourceManager.GetString("CanTStartNewSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Clear the entire list..
        /// </summary>
        internal static string Clear_list {
            get {
                return ResourceManager.GetString("Clear_list", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Delete the selected row from list..
        /// </summary>
        internal static string Delete_selected_row {
            get {
                return ResourceManager.GetString("Delete_selected_row", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An error occurred while requesting periodic feedback position..
        /// </summary>
        internal static string Error_during_get_FP {
            get {
                return ResourceManager.GetString("Error_during_get_FP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An error occurred while processing the acquired data..
        /// </summary>
        internal static string Error_proc_data {
            get {
                return ResourceManager.GetString("Error_proc_data", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to set new values of oscillation parameters..
        /// </summary>
        internal static string Failed_to_set_new_oscillation_parameters {
            get {
                return ResourceManager.GetString("Failed_to_set_new_oscillation_parameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to start recording..
        /// </summary>
        internal static string Failed_to_start_recording {
            get {
                return ResourceManager.GetString("Failed_to_start_recording", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The specified frequency with specified error was not found..
        /// </summary>
        internal static string Frequency_not_found {
            get {
                return ResourceManager.GetString("Frequency_not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Load list from file..
        /// </summary>
        internal static string Load_list {
            get {
                return ResourceManager.GetString("Load_list", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Maximum recording time (in minutes)..
        /// </summary>
        internal static string MaxRecDuration {
            get {
                return ResourceManager.GetString("MaxRecDuration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Frequency {0} Hz and Displacement {1} m are set..
        /// </summary>
        internal static string New_oscillation_value_set {
            get {
                return ResourceManager.GetString("New_oscillation_value_set", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No boundaries were set. Contact the developer..
        /// </summary>
        internal static string No_borders_were_set {
            get {
                return ResourceManager.GetString("No_borders_were_set", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Number of periods to record..
        /// </summary>
        internal static string NumberOfPeriods {
            get {
                return ResourceManager.GetString("NumberOfPeriods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Is remote master mode.
        /// </summary>
        internal static string progIsRemoteMaster {
            get {
                return ResourceManager.GetString("progIsRemoteMaster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Is remote slave mode.
        /// </summary>
        internal static string progIsRemoteSlave {
            get {
                return ResourceManager.GetString("progIsRemoteSlave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Save list to file..
        /// </summary>
        internal static string Save_list {
            get {
                return ResourceManager.GetString("Save_list", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An error occurred while saving data to file..
        /// </summary>
        internal static string SaveError {
            get {
                return ResourceManager.GetString("SaveError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Settings saved!.
        /// </summary>
        internal static string SettingsSaved {
            get {
                return ResourceManager.GetString("SettingsSaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Start play.
        /// </summary>
        internal static string StartPlay {
            get {
                return ResourceManager.GetString("StartPlay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Start registration.
        /// </summary>
        internal static string StartRegistr {
            get {
                return ResourceManager.GetString("StartRegistr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The measured part of summary of results is alredy set..
        /// </summary>
        internal static string SummaryMeasuredValueEx {
            get {
                return ResourceManager.GetString("SummaryMeasuredValueEx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The set part of summary of results is already set..
        /// </summary>
        internal static string SummarySetValueEx {
            get {
                return ResourceManager.GetString("SummarySetValueEx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The value cannot be null..
        /// </summary>
        internal static string The_value_cannot_be_null {
            get {
                return ResourceManager.GetString("The_value_cannot_be_null", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to get is ready for measurements info..
        /// </summary>
        internal static string Unable_to_get_is_ready_for_measure {
            get {
                return ResourceManager.GetString("Unable_to_get_is_ready_for_measure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to get status..
        /// </summary>
        internal static string Unable_to_get_status {
            get {
                return ResourceManager.GetString("Unable_to_get_status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to pause oscillation..
        /// </summary>
        internal static string Unable_to_pause_oscilation {
            get {
                return ResourceManager.GetString("Unable_to_pause_oscilation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to resume oscillation..
        /// </summary>
        internal static string Unable_to_resume_oscilation {
            get {
                return ResourceManager.GetString("Unable_to_resume_oscilation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to set center of oscillation..
        /// </summary>
        internal static string Unable_to_set_center {
            get {
                return ResourceManager.GetString("Unable_to_set_center", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to set parameters of oscillation..
        /// </summary>
        internal static string Unable_to_set_oscill_params {
            get {
                return ResourceManager.GetString("Unable_to_set_oscill_params", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to set update trigger..
        /// </summary>
        internal static string Unable_to_set_updateTrigger {
            get {
                return ResourceManager.GetString("Unable_to_set_updateTrigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to start user program..
        /// </summary>
        internal static string Unable_to_start_up {
            get {
                return ResourceManager.GetString("Unable_to_start_up", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to stop user program..
        /// </summary>
        internal static string Unable_to_stop_up {
            get {
                return ResourceManager.GetString("Unable_to_stop_up", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to save settings. Error: {0}..
        /// </summary>
        internal static string UnableToSaveSettings {
            get {
                return ResourceManager.GetString("UnableToSaveSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Entered value {0} is out of borders {1} - {2}. Value has been changed to be within the borders..
        /// </summary>
        internal static string Value_out_of_borders {
            get {
                return ResourceManager.GetString("Value_out_of_borders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0}/s.
        /// </summary>
        internal static string Velocity_format {
            get {
                return ResourceManager.GetString("Velocity_format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Time (in seconds) before the next line in the list automatically starts..
        /// </summary>
        internal static string WaitTime_s {
            get {
                return ResourceManager.GetString("WaitTime_s", resourceCulture);
            }
        }
    }
}
